name: CI pipeline
# This workflow is triggered on pushes to the repository.
on: [push]

jobs:
  build:
    name: Test & Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.13"
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run tests
        run: go test ./pkg/... -coverprofile cover.out.tmp
      - name: Removes mocks from tests
        run: cat cover.out.tmp | grep -v "_mock.go" > cover.out
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.31
          args: --skip-files .*_test.go
      - uses: codecov/codecov-action@v1
        with:
          file: ./cover.out
      - name: Update codecov
        run: bash <(curl -s https://codecov.io/bash)
  
  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2.3.0
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          context: ./
